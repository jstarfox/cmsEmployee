{"remainingRequest":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/node_modules/babel-loader/lib/index.js!/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/node_modules/eslint-loader/index.js??ref--14-0!/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/src/store/index.js","dependencies":[{"path":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/src/store/index.js","mtime":1642184453954},{"path":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/babel.config.js","mtime":1641848375394},{"path":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/node_modules/cache-loader/dist/cjs.js","mtime":1641416031358},{"path":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/node_modules/babel-loader/lib/index.js","mtime":1641416031356},{"path":"/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/node_modules/eslint-loader/index.js","mtime":1641496510291}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/Jordan/Documents/Capstone Project/cmsshoppingcart/vue/src/store/index.js"],"names":["Vue","Vuex","Axios","use","baseURL","employeesURL","pagesURL","Store","strict","state","employees","pages","getters","employeeByid","idm","find","employee","_id","pagesById","id","page","mutations","setEmployees","setPages","actions","setEmployeesAction","context","get","data","commit","addEmployee","post","editEmployee","put","deleteEmployee","delete","setPagesAction","addPage","editPage","deletePage"],"mappings":"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","sourcesContent":["//import Vue, Vuex and Axios\nimport Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport Axios from \"axios\";\n\nVue.use(Vuex);\n//Set the Base URL and Set the pages URL\nconst baseURL = \"http://localhost:3000\"\nconst employeesURL = `${baseURL}/employees`\nconst pagesURL = `${baseURL}/pages`\n//Create Store module object for Page:\nexport default new Vuex.Store({\n    strict: true,\n// State object that contains array of pages\nstate: {\n    employees:[],\n    pages:[]\n},\n//Mutations that sets states of all the pages (Each mutation has a string type and a handler. It is like an event)\ngetters: {\n    employeeByid: (state) => (idm) => state.employees.find((employee) => employee._id === idm),\n    pagesById: (state) => (id) => state.pages.find((page) => page._id === id),\n},\n\nmutations:{\n    setEmployees(state, employees){\n        state.employees = employees\n    },\n    setPages(state, pages){\n        state.pages = pages\n    }\n},\n//Actions that gets the pages from DB and adds them to the State array. (actions commit mutations and can contain async ops)\nactions: {\n    async setEmployeesAction(context){\n        context.commit(\"setEmployees\", (await Axios.get(employeesURL)).data);\n    },\n    async addEmployee(context, employee){\n        await Axios.post(employeesURL, employee);\n        context.commit(\"setEmployees\", (await Axios.get(employeesURL)).data);\n    },\n    async editEmployee(context, employee){\n        await Axios.put(`${employeesURL}/${employee._id}`, employee);\n        context.commit(\"setEmployees\", (await Axios.get(employeesURL)).data);\n    },\n    async deleteEmployee(context,employee) {\n        await Axios.delete(`${employeesURL}/${employee._id}`, employee);\n        context.commit(\"setEmployees\", (await Axios.get(employeesURL)).data);\n        //console.log(employees);\n    },\n        async setPagesAction(context){\n            context.commit(\"setPages\", (await Axios.get(pagesURL)).data);\n        },\n        async addPage(context, page){\n            await Axios.post(pagesURL, page);\n            context.commit(\"setpages\", (await Axios.get(pagesURL)).data);\n        },\n        async editPage(context, page){\n            await Axios.put(`${pagesURL}/${page._id}`, page);\n            context.commit(\"setpages\", (await Axios.get(pagesURL)).data);\n        },\n        async deletePage(context,page) {\n            await Axios.delete(`${pagesURL}/${page._id}`, page);\n            context.commit(\"setpages\", (await Axios.get(pagesURL)).data);\n            //console.log(pages);\n        }\n}});\n"]}]}